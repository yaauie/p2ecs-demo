input {
  stdin {
    codec => cef
  }
}

filter {
  # ECS: remap up STDIN Input Metadata
  mutate {
    rename => { "host" => "[host][ip]" }
  }

  # ECS: remap CEF Headers (order: occurance)
  mutate {
    rename => {
      "cefVersion"         => "[cef][version]"
      "deviceVendor"       => "[observer][vendor]"
      "deviceProduct"      => "[observer][product]"
      "deviceVersion"      => "[observer][version]"
      "deviceEventClassId" => "[event][code]"
      "name"               => "[cef][name]"
      "severity"           => "[event][severity]"
    }
  }

  # ECS: remap CEF Extensions (order: alphabetic)
  mutate {
    rename => {
      "agentAddress"       => "[agent][ip]"
      "agentHostName"      => "[agent][name]"
      "agentId"            => "[agent][id]"
      "agentMacAddress"    => "[agent][mac]"
      "agentReceiptTime"   => "[@metadata][cef-raw][agentReceiptTime]"
      "agentTimeZone"      => "[cef][agent][timezone]"
      "agentType"          => "[agent][type]"
      "agentVersion"       => "[agent][version]"
      "agentZoneURI"       => "[cef][agent][zone][uri]"
      "destinationAddress" => "[destination][ip]"
      "destinationZoneURI" => "[cef][destination][zone][uri]"
      "deviceAction"       => "[event][action]"
      "deviceAddress"      => "[observer][ip]"
      "deviceHostName"     => "[observer][hostname]"
      "deviceReceiptTime"  => "[@metadata][cef-raw][deviceReceiptTime]"
      "deviceTimeZone"     => "[event][timezone]"
      "eventId"            => "[event][id]"
      "sourceAddress"      => "[source][ip]"
      "sourcePort"         => "[source][port]"
      "sourceZoneURI"      => "[cef][source][zone][uri]"
    }
  }

  # ECS: parse @timestamp from rt/deviceReceiptTime
  if [@metadata][cef-raw][deviceReceiptTime] {
    date {
      match  => ["[@metadata][cef-raw][deviceReceiptTime]", "UNIX_MS", "MMM dd yyyy HH:mm:ss.SSS"]
      target => "@timestamp"
      timezone => "%{[event][timezone]}"
      tag_on_failure => "_dateparsefailure_devicereceipttime"
    }
    if "_dateparsefailure_devicereceipttime" in [tags] {
      mutate { copy => {"[@metadata][cef-raw][deviceReceiptTime]" => "[@cef-raw][deviceReceiptTime]"} }
    }
  }

  # ECS: parse [event][created] from art/agentReceiptTime
  if [@metadata][cef-raw][agentReceiptTime] {
    date {
      match  => ["[@metadata][cef-raw][agentReceiptTime]", "UNIX_MS", "MMM dd yyyy HH:mm:ss.SSS"]
      target => "[event][created]"
      tag_on_failure => "_dateparsefailure_agentreceipttime"
      timezone => "%{[cef][agent][timezone]}"
    }
    if "_dateparsefailure_agentreceipttime" in [tags] {
      mutate { copy => {"[@metadata][cef-raw][agentReceiptTime]" => "[@cef-raw][agentReceiptTime]"} }
    }
  }
}

output {
  tcp {
    host => localhost
    port => "${DEMO_LISTEN_PORT}"
    codec => json_lines
  }
}